{"version":3,"sources":["utils/axios.js","utils/index.js","scripts/actions/index.js","scripts/views/login/index.js","scripts/views/signup/index.js","scripts/views/user/info/update/index.js","scripts/views/user/info/index.js","scripts/views/user/addresslist/index.js","scripts/views/date/subordinate/index.js","scripts/views/addDate/index.js","scripts/views/date/mydate/updateMyDate/index.js","scripts/views/date/mydate/index.js","scripts/views/noMatch/index.js","scripts/views/group/updateGroup/index.js","scripts/views/group/index.js","scripts/views/echart/index.js","scripts/views/home/index.js","scripts/views/index.js","scripts/reducers/user.js","scripts/reducers/index.js","scripts/store.js","scripts/index.js","App.js","serviceWorker.js","index.js"],"names":["token","failToast","msg","message","error","success","axios","defaults","baseURL","interceptors","request","use","config","time","sessionStorage","headers","Promise","reject","response","console","log","data","code","history","push","type","createHashHistory","register","a","async","url","params","post","res","payload","Login","connect","checkmobile","rule","value","callback","test","checkMobile","handleSubmit","e","props","form","validateFields","err","values","mobile","phone","password","then","usertype","result","getFieldDecorator","this","className","src","alt","onSubmit","Item","label","rules","required","validator","style","width","hasFeedback","Password","background","htmlType","marginLeft","onClick","Component","Form","create","timer","SignUp","state","confirmDirty","count","txt","codeFlag","toggle","checkCode","handleConfirmBlur","target","setState","compareToFirstPassword","getFieldValue","validateToNextPassword","force","preventDefault","dispatch","start","clearInterval","computedTime","setInterval","hanleSendCode","ref","el","gutter","span","disabled","onBlur","window","back","FormItem","Update","getGroupList","groupList","branch","groupSelect","sex","name","close","setOne","setFieldsValue","formItemLayout","labelCol","wrapperCol","placeholder","length","map","item","index","Option","key","_id","group_name","offset","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","Info","getUserInfo","getData","list","openCreateAccount","addVisible","closeCreateAccount","visible","closeAddModal","isLogin","userList","columns","title","dataIndex","render","text","filter","cursor","color","onCancel","footer","getAccountList","rowKey","dataSource","AddressList","Input","Search","nameOrNum","Subordinate","TextArea","Select","AddDate","date","dateString","handleChange","addMyDate","types","content","rows","UpdateMyDate","updateMyDate","MyDate","addvisible","closeAccount","total","page","current","handleSearch","pagination","pageSize","defaultCurrent","showTotal","onSearch","enterButton","float","NoMatch","textAlign","UpdateGroup","group_man_name","manSelect","group_man_mobile","getUserList","GroupList","groupName","Echarts","myEchartsPie","myPie","echarts","init","ReactDom","findDOMNode","refs","pie","optionPie","textStyle","left","top","tooltip","trigger","formatter","legend","bottom","fontSize","itemGap","itemHeight","itemWidth","toolbox","feature","dataView","show","readOnly","restore","saveAsImage","series","radius","center","labelLine","length2","peopleList","man","women","setOption","height","margin","Header","Layout","Content","Footer","Sider","SubMenu","Menu","breadcrumbNameMap","menu","clear","location","href","origin","Home","pathSnippets","pathname","split","i","extraBreadcrumbItems","_","slice","join","to","breadcrumbItems","concat","minHeight","boxShadow","lineHeight","theme","defaultSelectedKeys","defaultOpenKeys","mode","exact","padding","overlay","marginRight","display","position","path","component","MainLayout","defaultState","immutable","fromJS","reducers","combineReducers","user","action","obj","toJS","obj1","obj2","obj3","obj4","obj5","store","createStore","applyMiddleware","thunk","promise","MainRoute","basename","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2007a188.chunk.js","sourcesContent":["\r\n\r\nimport axios from \"axios\";\r\nimport {message} from \"antd\";\r\nimport {history} from \"&\"\r\n\r\n \r\nlet token = \"\";\r\n\r\nconst baseURL = 'http://101.200.87.1:2020/oa/'\r\n\r\naxios.defaults.baseURL = baseURL;\r\n\r\n\r\n// axios.defaults.headers.common['token'] = token;\r\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\nexport function loadingToast(msg, time) {\r\n    msg = msg || \"请求中....\";\r\n    time = time || 1;\r\n    // message.hide();\r\n    // message.loading(msg, time, () => {\r\n    //     console.log('Load complete !!!');\r\n    // });\r\n};\r\n\r\nexport function failToast(msg) {\r\n    message.error(msg, 1);\r\n}\r\n\r\nexport function offline(msg) {\r\n    // Toast.hide();\r\n    // Toast.offline(msg, 1);\r\n}\r\n\r\nexport function success(msg) {\r\n    // Toast.hide()\r\n    message.success(msg, 1);\r\n}\r\n\r\n\r\n//axios 拦截器 Interceptors\r\n\r\n//request 请求发送之前的拦截器\r\naxios.interceptors.request.use(function (config) {\r\n\r\n    // Do something before request is sent 配置动画\r\n    loadingToast();\r\n    token =  sessionStorage.token ? sessionStorage.token : \"\";\r\n    config.headers['token'] = token;\r\n    return config;\r\n}, function (error) {\r\n    // Do something with request error 请求失败的提示\r\n    offline(\"请求失败，网络异常\")\r\n    return Promise.reject(error);\r\n});\r\n\r\n//response 响应完成的拦截器\r\naxios.interceptors.response.use(function (response) {\r\n    // Do something with response data 成功的响应\r\n    console.log(response);\r\n\r\n    if (response.data.code == \"3000\") {\r\n        //跳转登录\r\n        history.push(\"/login\");\r\n\r\n    }\r\n\r\n\r\n    // type  不存在 success\r\n    // type=0  fail\r\n    // type=1 success\r\n      if(!!response.data.type){\r\n        success(response.data.msg);\r\n      }else{\r\n        if(response.data.type==0){\r\n            failToast(response.data.msg)\r\n        }else{\r\n          success(response.data.msg);\r\n        }\r\n      }\r\n    return response;\r\n}, function (error) {\r\n    // Do something with response error 失败的响应\r\n    failToast(\"响应失败,服务器异常\")\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport { axios, baseURL }","import url from \"url\";\r\nimport {createHashHistory} from \"history\";\r\n\r\n// export {msg} from \"./msg\"\r\n\r\nexport {config} from \"./config\"\r\n\r\nexport const commonCss = {\r\n    all:{\r\n        margin:0,\r\n        padding:0\r\n    },\r\n    three:{\r\n        backgroundColor:\"pink\",\r\n        boxShadow:\"0 0 0 10px blue\"\r\n    }\r\n}\r\n\r\n\r\nexport const commonJS = {\r\n    move(){\r\n        console.log(\"这是 鼠标滑动事件\")\r\n    },\r\n    touch(){\r\n        console.log(\"this is touch event 触摸事件 \")\r\n    }\r\n}\r\n\r\n\r\nexport {axios,baseURL} from \"./axios\"\r\n\r\n\r\n\r\nexport function GetQuery(search){\r\n\r\n    return url.parse(search,true).query;\r\n    // constructor(search){\r\n    //     this.search = search;\r\n    // }\r\n\r\n}\r\n\r\nexport const history=new createHashHistory();","import {axios} from \"&\";\r\nimport {history} from \"&\";\r\n\r\nexport async function register({url,params}){\r\n    console.log(params);\r\n    const res = await axios.post(url,params);\r\n    console.log(res.data)\r\n        if(res.data.type==1){\r\n            history.push(\"/login\");\r\n        }\r\n    return {\r\n        type:\"register\",\r\n        payload:res,\r\n    }\r\n}\r\n\r\n\r\nexport async function login({url,params}){\r\n    const res=await axios.post(url,params);\r\n    if(res.data.type==1){\r\n        // sessionStorage.usertype = res.data.result.usertype;\r\n        // history.push(\"/home\");\r\n    }\r\n    return {\r\n        type:\"login\",\r\n        payload:res\r\n    }\r\n}\r\n\r\n\r\nexport async function userInfo({url,params}){\r\n    const res=await axios.post(url,params);\r\n    return {\r\n        type:\"userInfo\",\r\n        payload:res\r\n    }\r\n}\r\n\r\n\r\nexport async function getUserInfo({url,params}){\r\n    const res=await axios.post(url,params); \r\n    return {\r\n        type:\"getUserInfo\",\r\n        payload:res.data.result\r\n    }\r\n}\r\n\r\nexport async function addMyDate({url,params}){\r\n    const res=await axios.post(url,params); \r\n    return {\r\n        type:\"addMyDate\",\r\n        payload:res.data.result\r\n    }\r\n}\r\n\r\nexport async function updateMyDate({url,params}){\r\n    const res=await axios.post(url,params); \r\n    return {\r\n        type:\"updateMyDate\",\r\n        payload:res.data.result\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nimport { history } from \"&\";\r\n\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport { login } from \"../../actions\";\r\nimport {axios} from \"&\";\r\n\r\n\r\n@connect()\r\nclass Login extends Component {\r\n\r\n    checkmobile = (rule, value, callback) => {\r\n        let reg = /^1[3456789]\\d{9}$/;\r\n        if (value && !reg.test(value)) {\r\n            if (value !== \"admin\") {\r\n                callback(`请输入正确的手机号`)\r\n            }\r\n        }\r\n        callback()\r\n    };\r\n\r\n    checkMobile = (rule, value, callback) => {\r\n        let reg = /^[\\w]{6,16}$/;\r\n        if (value && !reg.test(value)) {\r\n            callback(`请输入数字字母组成的6-16位密码`)\r\n        }\r\n        callback()\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n\r\n                axios.post(\"/login\", {\r\n                    mobile: values.phone,\r\n                    password: values.password,\r\n                }).then(res=>{\r\n                    if (res.data.type == 1) {\r\n                        sessionStorage.token = res.data.token;\r\n                        sessionStorage.mobile = values.phone;\r\n                        sessionStorage.usertype = res.data.result.usertype;\r\n                        history.push(\"/home/info\");\r\n\r\n                    }\r\n                })\r\n\r\n                // this.props.dispatch(login({\r\n                //     url: '/login',\r\n                //     params: {\r\n                //         mobile: values.phone,\r\n                //         password: values.password,\r\n                //     },\r\n                // }).then(res => {\r\n                //     console.log(res.payload.data.type)\r\n                //     if (res.payload.data.type == 1) {\r\n                //         sessionStorage.token = res.payload.data.token;\r\n                //         sessionStorage.mobile = values.phone;\r\n                //         sessionStorage.usertype = res.payload.data.result.usertype;\r\n                //         history.push(\"/home\");\r\n\r\n                //     }\r\n                // })\r\n                // )\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <div className=\"box\">\r\n                    <div className=\"ltoplog\">\r\n                        <img src=\"https://oa.deepcam.cn/images/noface.png\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item label=\"手机号\">\r\n                                {getFieldDecorator('phone', {\r\n                                    rules: [\r\n                                        { required: true, message: '请输入你的手机号' },\r\n                                        { validator: this.checkmobile },\r\n                                    ],\r\n                                })(<Input style={{ width: '100%' }} />)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码\" hasFeedback >\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入密码',\r\n                                        },\r\n                                        {\r\n                                            validator: this.checkMobile,\r\n                                        },\r\n                                    ],\r\n                                })(<Input.Password />)}\r\n                            </Form.Item>\r\n\r\n                            <div>\r\n                                <Button style={{ background: \"#1abc9c\" }} className=\"btn\" type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                                <Button className=\"btn\" type=\"danger\" style={{ marginLeft: 8 }}\r\n                                    onClick={() => history.push(\"/signup\")}>注册</Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin = Form.create()(Login);\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./index.scss\";\r\nimport { axios } from \"&\"\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Button,\r\n} from 'antd';\r\nimport { register } from \"../../actions\";\r\nimport { history } from \"&\";\r\n\r\nvar timer = null;\r\n\r\n@connect()\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        confirmDirty: false,\r\n        count: 60,\r\n        txt: \"发送验证码\",\r\n        codeFlag: true,\r\n        toggle: true,\r\n\r\n\r\n    };\r\n\r\n    checkCode = (rule, value, callback) => {\r\n        let reg = /^[0-9]{4}$/;\r\n        if (value && !reg.test(value)) {\r\n            callback(`请输入收到的验证码`)\r\n        }\r\n        callback();\r\n    };\r\n\r\n    checkmobile = (rule, value, callback) => {\r\n        let reg = /^1[3456789]\\d{9}$/;\r\n        if (value && !reg.test(value)) {\r\n            if (value !== \"admin\") {\r\n                callback(`请输入正确的手机号`)\r\n            }\r\n        }\r\n        callback()\r\n\r\n    };\r\n    handleConfirmBlur = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form,\r\n            reg = /^[\\w]{6,16}$/;\r\n        if (value && value !== form.getFieldValue('firstPassword')) {\r\n            callback(\"两次密码不一致\");\r\n        } else if (value && !reg.test(value)) {\r\n            callback(`请输入数字字母组成的6-16位密码`)\r\n        } else {\r\n            callback()\r\n        }\r\n    };\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form,\r\n            reg = /^[\\w]{6,16}$/;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['password'], { force: true });\r\n        } else if (value && !reg.test(value)) {\r\n            callback(`请输入数字字母组成的6-16位密码`)\r\n        }\r\n        callback()\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            // console.log('Received values of form: ', values, err);\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                // axios.post(\"/checkCode\", {\r\n                //     mobile: this.mobile.state.value,\r\n                //     code: values.code,\r\n                // }).then(res => {\r\n                //     if (!!res.data.type) {\r\n                //         // sessionStorage.token=res.data.token;\r\n                //         sessionStorage.mobile = this.mobile.state.value;\r\n                //         //    history.push(\"/login\");\r\n                //         clearInterval(timer);\r\n                //         timer = null;\r\n                //         this.props.dispatch(register({\r\n                //             url: '/register',\r\n                //             params: {\r\n                //                 mobile: values.phone,\r\n                //                 code: values.code,\r\n                //                 password: values.password,\r\n                //             },\r\n                //         }))\r\n\r\n\r\n                //     } else {\r\n                //         // sessionStorage.token = \"\";\r\n                //         // sessionStorage.mobile = \"\";\r\n                //     }\r\n                // })\r\n                this.props.dispatch(register({\r\n                    url: '/register',\r\n                    params: {\r\n                        mobile: values.phone,\r\n                        code: values.code,\r\n                        password: values.password,\r\n                    },\r\n                }))\r\n\r\n\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    start = () => {\r\n        if (this.state.count > 1) {\r\n            this.setState({\r\n                count: --this.state.count,\r\n                txt: `剩余 ${this.state.count} 秒`,\r\n                codeFlag: false,\r\n                toggle: false\r\n            })\r\n        } else {\r\n            clearInterval(timer);\r\n            timer = null;\r\n            this.setState({\r\n                count: 60,\r\n                txt: '发送验证码',\r\n                codeFlag: true,\r\n                toggle: true\r\n            })\r\n        }\r\n    }\r\n    computedTime = () => {\r\n        this.start();\r\n        timer = setInterval(this.start, 1000);\r\n    }\r\n\r\n    hanleSendCode = () => {\r\n        //发送验证码\r\n        this.computedTime()\r\n        axios.post(\"/aly/sendSms\", {\r\n            mobile: this.mobile.state.value\r\n        }).then(res => {\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"box\">\r\n                <div className=\"ltoplog\">\r\n                    <img src=\"https://oa.deepcam.cn/images/noface.png\" alt=\"\" />\r\n                </div>\r\n                <div className=\"content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item label=\"手机号\">\r\n                            {getFieldDecorator('phone', {\r\n                                rules: [\r\n                                    { required: true, message: '请输入你的手机号' },\r\n                                    { validator: this.checkmobile },\r\n                                ],\r\n                            })(<Input ref={el => this.mobile = el} style={{ width: '100%' }} />)}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"验证码\"\r\n                        >\r\n                            <Row gutter={8}>\r\n                                <Col span={12}>\r\n                                    {getFieldDecorator('code', {\r\n                                        rules: [\r\n                                            { required: true, message: '请输入验证码' },\r\n                                            { validator: this.checkCode }\r\n                                        ],\r\n                                    })(<Input />)}\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Button disabled={!this.state.codeFlag} onClick={this.hanleSendCode} type=\"primary\" className=\"btn\">{this.state.txt}</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"密码\" >\r\n                            {getFieldDecorator('firstPassword', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请输入密码',\r\n                                    },\r\n                                    {\r\n                                        validator: this.validateToNextPassword,\r\n                                    },\r\n                                ],\r\n                            })(<Input.Password />)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"确认密码\">\r\n                            {getFieldDecorator('password', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请确认密码',\r\n                                    },\r\n                                    {\r\n                                        validator: this.compareToFirstPassword,\r\n                                    },\r\n                                ],\r\n                            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                        </Form.Item>\r\n                        <div>\r\n                            <Button className=\"btn\" type=\"primary\" htmlType=\"submit\">注册</Button>\r\n                            <Button className=\"btn\" type=\"primary\" style={{ marginLeft: 8 }}\r\n                                onClick={() => window.history.back()}>返回</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nSignUp = Form.create()(SignUp);\r\nexport default SignUp;","\r\nimport React, { Component } from \"react\";\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { userInfo } from \"../../../../actions\";\r\nimport { axios } from \"&\";\r\nconst FormItem = Form.Item;\r\nclass Update extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groupList: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getGroupList();\r\n        let value = this.props.setOne;\r\n        this.props.form.setFieldsValue(\r\n            {\r\n                groupSelect: value.branch,\r\n                name: value.name,\r\n                sex: value.sex,\r\n                post: value.post,\r\n                mobile: value.mobile + \"\"\r\n            }\r\n        )\r\n    }\r\n\r\n    getGroupList = () => {\r\n        axios.post(\"/getGroup\")\r\n            .then(res => {\r\n                this.setState({\r\n                    groupList: res.data.result,\r\n                })\r\n            });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // this.props.dispatch(userInfo({\r\n                //     url: '/updateUserInfo',\r\n                //     params: {\r\n                //         mobile: values.mobile,\r\n                //         branch: values.groupSelect,\r\n                //         sex: values.sex,\r\n                //         post: values.post,\r\n                //         name: values.name,\r\n                //     }\r\n                // }))\r\n                axios.post(\"/updateUserInfo\", {\r\n                    mobile: values.mobile,\r\n                    branch: values.groupSelect,\r\n                    sex: values.sex,\r\n                    post: values.post,\r\n                    name: values.name,\r\n                }).then(res => {\r\n                    this.props.close();\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 }\r\n        };\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                {sessionStorage.usertype != 0 ? (<FormItem\r\n                    label=\"部门\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {\r\n                        getFieldDecorator('groupSelect', { rules: [{ required: true, message: '请选择部门负责人' }] })(\r\n                            <Select\r\n                                placeholder={'请选择部门'}\r\n                            >\r\n                                {\r\n                                    this.state.groupList.length > 0 ?\r\n                                        this.state.groupList.map((item, index) => (\r\n                                            <Select.Option key={index} value={item._id}>{item.group_name}</Select.Option>\r\n                                        )) : null\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>) : ''}\r\n\r\n                <FormItem\r\n                    label=\"姓名\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {getFieldDecorator('name', {\r\n                        rules: [{\r\n                            required: true, message: `请输入姓名`\r\n                        }, {\r\n                            validator: this.name\r\n                        }],\r\n                    })(\r\n                        <Input style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem\r\n\r\n                    label=\"性别\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {getFieldDecorator('sex', {\r\n                        rules: [{\r\n                            required: true, message: `请输入性别`\r\n                        }],\r\n                    })(\r\n                        <Select\r\n                            placeholder={'请选择性别'}\r\n                        >\r\n                            <Select.Option key={1} value='man'>man</Select.Option>\r\n                            <Select.Option key={1} value='women'>women</Select.Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem\r\n\r\n                    label=\"职位\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {getFieldDecorator('post', {\r\n                        rules: [{\r\n                            required: true, message: `请输入职位`\r\n                        }, {\r\n                            validator: this.post\r\n                        }],\r\n                    })(\r\n                        <Input style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem\r\n\r\n                    label=\"手机号\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {getFieldDecorator('mobile', {\r\n                        rules: [{\r\n                            required: true, message: `请输入手机号`\r\n                        }, {\r\n                            validator: this.mobile\r\n                        }],\r\n                    })(\r\n                        <Input style={{ width: 200 }} disabled onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n\r\n                    <Button type=\"primary\" htmlType=\"submit\"> 提交</Button>\r\n\r\n                </FormItem>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nUpdate = Form.create()(Update);\r\n\r\nexport default Update;","import \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\n\r\n\r\nimport { axios } from \"&\";\r\n\r\nimport { Button, Table, Form, Input, Modal, Select } from 'antd';\r\nimport { getUserInfo } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Update from \"./update\";\r\nimport { userInfo } from \"../../../actions\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n@connect(\r\n    (state) => {\r\n        console.log(state);\r\n        return {\r\n            ...state,\r\n        }\r\n    },\r\n    dispatch => {\r\n        return {\r\n            getUserInfo: payload => dispatch(getUserInfo(payload))\r\n        }\r\n    }\r\n)\r\nclass Info extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            addVisible: false,\r\n            isLogin: !!sessionStorage.mobile,\r\n            list: [],\r\n            setOne: {},\r\n            userList: [],\r\n            groupList: []\r\n        };\r\n        this.columns = [\r\n            {\r\n                title: '部门',\r\n                dataIndex: 'branch',\r\n                key: 'branch',\r\n                render: (text, record) => {\r\n                    return (\r\n                        <span>{this.state.groupList.filter(item => item._id === record.branch)[0] && this.state.groupList.filter(item => item._id === record.branch)[0].group_name}</span>\r\n                    )\r\n                }\r\n                // render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: \"name\"\r\n                // render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: \"sex\"\r\n            },\r\n            {\r\n                title: '职位',\r\n                dataIndex: 'post',\r\n                key: \"post\"\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile',\r\n                key: \"mobile\"\r\n            },\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'uid',\r\n                key: \"id\"\r\n            },\r\n            (() => {\r\n                let _json = {\r\n                    title: '操作',\r\n                    dataIndex: 'action',\r\n                    key: 'action',\r\n                    render: (text, record) => {\r\n                        return (\r\n                            <span\r\n                                style={{ cursor: 'pointer', color: '#1890ff' }}\r\n                                onClick={\r\n                                    () => (this.setState({ visible: true, setOne: record }))\r\n                                }\r\n                            >\r\n                                修改\r\n                            </span>\r\n                        )\r\n                    }\r\n                }\r\n                return _json;\r\n            })()\r\n        ];\r\n    }\r\n\r\n    componentDidMount() { //parmas是对象\r\n        this.getGroupList();\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        axios.post(\"/getUserInfo\", { mobile: sessionStorage.mobile })\r\n            .then(res => {\r\n                // console.log(res.data.result);\r\n                const result = res.data.result;\r\n                this.setState({\r\n                    list: result\r\n                })\r\n            })\r\n    }\r\n\r\n    openCreateAccount = (record = {}) => {\r\n        this.setState({\r\n            addVisible: true,\r\n            // userMsg: record\r\n        })\r\n\r\n    };\r\n\r\n    closeCreateAccount = () => {\r\n        this.setState({\r\n            visible: false\r\n        }, () => {\r\n            this.getData();\r\n        })\r\n    };\r\n    closeAddModal = () => {\r\n        this.setState({\r\n            addVisible: false\r\n        }, () => {\r\n            this.getData();\r\n        })\r\n    };\r\n\r\n    getGroupList = () => {\r\n        axios.post(\"/getGroup\")\r\n            .then(res => {\r\n                this.setState({\r\n                    groupList: res.data.result,\r\n                })\r\n            });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values); 这里要改,dispatch is on defind\r\n\r\n                axios.post(\"/userInfo\", {\r\n                    mobile: values.mobile,\r\n                    branch: values.branch,\r\n                    sex: values.sex,\r\n                    post: values.post,\r\n                    name: values.name,\r\n                }).then(res => {\r\n\r\n                })\r\n\r\n                // this.props.dispatch(userInfo({\r\n                //     url: '/userInfo',\r\n                //     params: {\r\n                //         mobile: values.mobile,\r\n                //         branch: values.branch,\r\n                //         sex: values.sex,\r\n                //         post: values.post,\r\n                //         name: values.name,\r\n                //     }\r\n                // }))\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 }\r\n        };\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                {sessionStorage.usertype == 0 ? <Button onClick={this.openCreateAccount} type=\"primary\">新增员工</Button> : ''}\r\n                {/* <Button onClick={this.openCreateAccount} type=\"primary\">新增个人资料</Button> */}\r\n                {/* <Modal\r\n                    visible={this.state.visible}\r\n                    onCancel={this.closeCreateAccount}\r\n                    // footer={null}\r\n                    // destroyOnClose={true} width={800}\r\n                    footer={null}\r\n                >\r\n                    <Add  close={this.closeCreateAccount} getAccountList={this.getAccountList} />\r\n                </Modal> */}\r\n\r\n                <Modal\r\n                    visible={this.state.visible}\r\n                    onCancel={this.closeCreateAccount}\r\n                    // footer={null}\r\n                    // destroyOnClose={true} width={800}\r\n                    footer={null}\r\n                >\r\n                    <Update setOne={this.state.setOne} close={this.closeCreateAccount} getAccountList={this.getAccountList} />\r\n                </Modal>\r\n                <Modal\r\n                    visible={this.state.addVisible}\r\n                    onCancel={this.closeAddModal}\r\n                    // footer={null}\r\n                    // destroyOnClose={true} width={800}                    这里就是add啊,昨天跟你写了的啊,还有先不用redux,搞的一团糟.用了的就先算了.可以了\r\n                    footer={null}\r\n                >\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormItem\r\n                            label=\"部门\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {\r\n                                getFieldDecorator('groupSelect', { rules: [{ required: true, message: '请选择部门负责人' }] })(\r\n                                    <Select\r\n                                        placeholder={'请选择部门'}\r\n                                    >\r\n                                        {\r\n                                            this.state.groupList.length > 0 ?\r\n                                                this.state.groupList.map((item, index) => (\r\n                                                    <Select.Option key={index} value={item._id}>{item.group_name}</Select.Option>\r\n                                                )) : null\r\n                                        }\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem\r\n                            label=\"姓名\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {getFieldDecorator('name', {\r\n                                rules: [{\r\n                                    required: true, message: `请输入姓名`\r\n                                }, {\r\n                                    validator: this.name\r\n                                }],\r\n                            })(\r\n                                <Input style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                            )}\r\n                        </FormItem>\r\n\r\n                        <FormItem\r\n\r\n                            label=\"性别\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {getFieldDecorator('sex', {\r\n                                rules: [{\r\n                                    required: true, message: `请输入性别`\r\n                                }],\r\n                            })(\r\n                                <Select\r\n                                    placeholder={'请选择性别'}\r\n                                >\r\n                                    <Select.Option key={1} value='man'>man</Select.Option>\r\n                                    <Select.Option key={1} value='women'>women</Select.Option>\r\n                                </Select>\r\n                            )}\r\n                        </FormItem>\r\n\r\n                        <FormItem\r\n\r\n                            label=\"职位\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {getFieldDecorator('post', {\r\n                                rules: [{\r\n                                    required: true, message: `请输入职位`\r\n                                }, {\r\n                                    validator: this.post\r\n                                }],\r\n                            })(\r\n                                <Input style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                            )}\r\n                        </FormItem>\r\n\r\n                        <FormItem\r\n\r\n                            label=\"手机号\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {getFieldDecorator('mobile', {\r\n                                rules: [{\r\n                                    required: true, message: `请输入手机号`\r\n                                }, {\r\n                                    validator: this.mobile\r\n                                }],\r\n                            })(\r\n                                <Input style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                            )}\r\n                        </FormItem>\r\n\r\n                        <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\"> 提交</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n                <Table\r\n                    rowKey={'table'}\r\n                    rowSelection={rowSelection}\r\n                    columns={this.columns}\r\n                    dataSource={this.state.list}\r\n                // pagination={this.state.pagination}\r\n                // onChange={this.handleTableChange}\r\n                >\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nInfo = Form.create()(Info);\r\nexport default Info;","import \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Table, Modal, Input,Icon  } from 'antd';\r\n\r\nimport {axios} from \"&\"\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n\r\nconst Search = Input.Search;\r\nclass AddressList extends Component {\r\n    componentDidMount(){\r\n        this.getGroupList();\r\n        axios.post(\"/getOtherInfo\",{ mobile: sessionStorage.mobile })\r\n        .then(res=>{\r\n            console.log(res);\r\n            this.setState({\r\n                list:res.data.result\r\n            })\r\n        })\r\n    }\r\n\r\n    getGroupList = () => {\r\n        axios.post(\"/getGroup\")\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    groupList: res.data.result,\r\n                })\r\n            });\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            isLogin: !!sessionStorage.mobile,\r\n            list: [],\r\n            nameOrNum: null, // 搜索框里用来搜索的关键字\r\n            groupList: [],\r\n        };\r\n        this.columns = [\r\n            {\r\n                title: '部门',\r\n                dataIndex: 'branch',\r\n                key:'branch',\r\n                render: (text, record) => {\r\n                    return (\r\n                    <span>{this.state.groupList.filter(item => item._id === record.branch)[0]&&this.state.groupList.filter(item => item._id === record.branch)[0].group_name}</span>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key:'name',\r\n            },\r\n            {\r\n                title: '职位',\r\n                dataIndex: 'post',\r\n                key:'post',\r\n                // filters:[\r\n                //     {\r\n                //         text: 'UI',\r\n                //         value: 'UI',\r\n                //       },\r\n                //       {\r\n                //         text: '前端开发',\r\n                //         value: '前端开发',\r\n                //       },\r\n                //       {\r\n                //         text: '人事',\r\n                //         value: '人事',\r\n                //       },\r\n                // ],\r\n                // onFilter: (value, record) => record.post.indexOf(value) === 0,\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile',\r\n                key:'mobile',\r\n            },\r\n        ];\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {/* <Button style={{ marginLeft: 10, float: \"right\" }} title={\"搜索\"}\r\n                    icon='download'\r\n                    type='primary' onClick={this.exportRecord} />\r\n                <Search\r\n                    placeholder=\"请输入关键字\"\r\n                    // onSearch={this.searchByNameOrNum}\r\n                    enterButton\r\n                    style={{ width: 240, float: \"right\" }}\r\n                onChange={(e) => this.setState({nameOrNum: e.target.value})}\r\n                value={this.state.nameOrNum}\r\n                /> */}\r\n                <Table\r\n                    rowKey={'table'}\r\n                    rowSelection={rowSelection}\r\n                    columns={this.columns}\r\n                    dataSource={this.state.list}\r\n                // pagination={this.state.pagination}\r\n                // onChange={this.handleTableChange}\r\n                >\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddressList;","import \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Table, Modal, Input } from 'antd';\r\n\r\nimport { axios } from \"&\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n\r\n\r\n\r\n@connect()\r\nclass Subordinate extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            isLogin: !!sessionStorage.mobile,\r\n            list: [],\r\n            nameOrNum: null, // 搜索框里用来搜索的关键字\r\n        };\r\n        this.columns = [\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'types',\r\n                key: \"types\"\r\n            },\r\n            {\r\n                title: '日期',\r\n                dataIndex: 'date',\r\n                key: \"date\"\r\n            },\r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'name',\r\n                key: \"name\"\r\n            },\r\n            {\r\n                title: '日志内容',\r\n                dataIndex: 'content',\r\n                key: \"content\"\r\n            },\r\n            {\r\n                title: '新增时间',\r\n                dataIndex: 'time',\r\n                key: \"time\"\r\n            },\r\n        ];\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // axios.post(\"/getOtherInfo\", { mobile: sessionStorage.mobile })\r\n        //     .then(res => {\r\n        //         this.setState({\r\n        //             list: res.data.result\r\n        //         })\r\n        //     })\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        console.log('adsfdsg')\r\n        axios.post('/getLowDate',{\r\n            mobile: sessionStorage.mobile\r\n        }).then(\r\n            res => {\r\n                this.setState({\r\n                    list: res.data.result\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table\r\n                    rowKey={'table'}\r\n                    // rowSelection={rowSelection}s\r\n                    columns={this.columns}\r\n                    dataSource={this.state.list}\r\n                // pagination={this.state.pagination}\r\n                // onChange={this.handleTableChange}\r\n                >\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Subordinate;","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Select, DatePicker } from 'antd';\r\nimport { addMyDate } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\n\r\n@connect()\r\nclass AddDate extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            date:null,\r\n            value:null,\r\n            visible:null\r\n        }\r\n    }\r\n\r\n    onChange=(date, dateString)=>{\r\n        this.setState({\r\n            date:dateString\r\n        })\r\n    }\r\n    handleChange=(value)=>{\r\n\r\n        this.setState({\r\n            value:value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let value=this.state.value,\r\n        date=this.state.date;\r\n        console.log(value,date)\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                this.props.dispatch(addMyDate({\r\n                    url: '/addDate',\r\n                    params: {\r\n                        types: value,\r\n                        content: values.content,\r\n                        date:date,\r\n                        mobile:sessionStorage.mobile\r\n                    }\r\n                }))\r\n            }\r\n        });\r\n    }\r\n\r\n    closeCreateAccount = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        console.log(this.state);\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}  style={{\r\n                width: 700\r\n            }}>\r\n                <FormItem\r\n                    label=\"日报类型\"\r\n                    labelCol={{ span: 6 }}\r\n                >\r\n                    {getFieldDecorator('types', {\r\n                        rules: [{\r\n                            required: true, message: `请输入日报类型`\r\n                        }, {\r\n                            validator: this.branch\r\n                        }],\r\n                    })(\r\n                        <Select placeholder=\"请选择日报类型\" style={{ width: 200 }} onChange={this.handleChange}>\r\n                            <Option value=\"日报\">日报</Option>\r\n                            <Option value=\"周报\">周报</Option>\r\n                            <Option value=\"月报\">月报</Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem\r\n\r\n                    label=\"日期\"\r\n                    labelCol={{ span: 6 }}\r\n                >\r\n                    {/* {getFieldDecorator('date', {\r\n                        rules: [{\r\n                            required: true, message: `请输入日期`\r\n                        }, {\r\n                            validator: this.date\r\n                        }],\r\n                    })(\r\n                        <DatePicker format={dateFormat} />\r\n                    )} */}\r\n                    <DatePicker placeholder=\"请选择日期\" onChange={this.onChange} />\r\n                </FormItem>\r\n\r\n                <FormItem\r\n                    label=\"内容\"\r\n                    labelCol={{ span: 6 }}\r\n                >\r\n                    {getFieldDecorator('content', {\r\n                        rules: [{\r\n                            required: true, message: `请输入内容`\r\n                        }, {\r\n                            validator: this.name\r\n                        }],\r\n                    })(\r\n                        <TextArea rows={6} style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n\r\n                <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n                    <Button onClick={this.closeCreateAccount}  type=\"primary\" htmlType=\"submit\"> 提交</Button>\r\n                </FormItem>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nAddDate = Form.create()(AddDate);\r\n\r\nexport default AddDate;","\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Form, Input, Button } from 'antd';\r\nimport { updateMyDate } from \"../../../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\n@connect()\r\nclass UpdateMyDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let value = this.props.setOne;\r\n        // console.log(value);\r\n        this.props.form.setFieldsValue({\r\n            content: value.content,\r\n            time: value.time\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                // console.log(values);\r\n                this.props.dispatch(updateMyDate({\r\n                    url: '/updateMyDate',\r\n                    params: {\r\n                        mobile: sessionStorage.mobile,\r\n                        content: values.content,\r\n                        time: values.time\r\n                    }\r\n                })) // 这里还要写回调的 改完要自动关闭蒙层\r\n                this.props.close();\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} style={{\r\n                width: 700\r\n            }}>\r\n                <FormItem\r\n                    label=\"时间\"\r\n                    labelCol={{ span: 6 }}\r\n                >\r\n                    {getFieldDecorator('time', {\r\n                        rules: [{\r\n                            required: true, message: `请输入内容`\r\n                        }, {\r\n                            validator: this.time\r\n                        }],\r\n                    })(\r\n                        <Input disabled style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    label=\"内容\"\r\n                    labelCol={{ span: 6 }}\r\n                >\r\n                    {getFieldDecorator('content', {\r\n                        rules: [{\r\n                            required: true, message: `请输入内容`\r\n                        }, {\r\n                            validator: this.content\r\n                        }],\r\n                    })(\r\n                        <TextArea rows={6} style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\"> 提交</Button>\r\n                </FormItem>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nUpdateMyDate = Form.create()(UpdateMyDate);\r\n\r\nexport default UpdateMyDate;\r\n","import \"./index.scss\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Button, Table, Divider, Tag, Modal, Input } from 'antd';\r\nimport AddDate from \"../../addDate\";\r\nimport { axios } from \"../../../../utils/axios\";\r\nimport UpdateMyDate from \"./updateMyDate\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n\r\n\r\n@connect()\r\nclass MyDate extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            addvisible: false,\r\n            isLogin: !!sessionStorage.mobile,\r\n            list: [],\r\n            setOne: {},\r\n            value: \"\",\r\n            pagination: {\r\n                total: \"\",\r\n                pageSize: 5,\r\n                current: 1,\r\n                defaultCurrent: 1,\r\n                showTotal: (total) => `总共 ${total} 条`\r\n                // showQuickJumper: true,\r\n                // showSizeChanger: true,\r\n\r\n\r\n            }\r\n        };\r\n        this.columns = [\r\n            {\r\n                title: '类型',\r\n                dataIndex: 'types',\r\n                key: \"types\"\r\n                // render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '日期',\r\n                dataIndex: 'date',\r\n                key: \"date\"\r\n                // render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '操作人',\r\n                dataIndex: 'name',\r\n                key: \"name\"\r\n            },\r\n            {\r\n                title: '日志内容',\r\n                dataIndex: 'content',\r\n                key: \"content\"\r\n            },\r\n            {\r\n                title: '新增时间',\r\n                dataIndex: 'time',\r\n                key: \"time\"\r\n            },\r\n            (() => {\r\n                let _json = {\r\n                    title: '操作',\r\n                    dataIndex: 'action',\r\n                    key: 'action',\r\n                    render: (text, record) => {\r\n                        return (\r\n                            <span\r\n                                style={{ cursor: 'pointer', color: '#1890ff' }}\r\n                                onClick={\r\n                                    () => (this.setState({ visible: true, setOne: record }))\r\n                                }\r\n                            >\r\n                                修改\r\n                            </span>\r\n                        )\r\n                    }\r\n                }\r\n                return _json;\r\n            })()\r\n        ];\r\n    }\r\n\r\n    openCreateAccount = (record = {}) => {\r\n        this.setState({\r\n            addvisible: true\r\n            // userMsg: record\r\n        })\r\n    };\r\n\r\n    closeCreateAccount = () => {\r\n        this.setState({\r\n            addvisible: false\r\n        })\r\n    };\r\n\r\n    closeAccount = () => {\r\n        this.setState({\r\n            visible: false\r\n        },\r\n            this.getData()\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        axios.post(\"/getMyDate\", { mobile: sessionStorage.mobile, value: this.state.value })\r\n            .then(res => {\r\n                this.setState({\r\n                    list: res.data.result,\r\n                    total: res.data.result.length - 1,\r\n                })\r\n            });\r\n    }\r\n\r\n    onChange = (page) => {\r\n        this.setState({\r\n            current: page,\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\nhandleSearch = (value) => {\r\n    console.log(value);\r\n    this.setState({\r\n        value: value\r\n    })\r\n    this.getData()\r\n}\r\n\r\n\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            {/* 新增日报 */}\r\n            <Button onClick={this.openCreateAccount} type=\"primary\">新增</Button>\r\n            <Modal\r\n                visible={this.state.addvisible}\r\n                onCancel={this.closeCreateAccount}\r\n                footer={null}\r\n                // destroyOnClose={true} width={800} userMsg这是什么大哥,乱写 两个蒙层怎么用同一个函数,乱写\r\n                footer={null}\r\n            >\r\n                <AddDate close={this.closeCreateAccount} />\r\n            </Modal>\r\n\r\n            <Search\r\n                placeholder=\"内容或操作人\"\r\n                onSearch={(value) => this.handleSearch(value)}\r\n                enterButton\r\n                style={{ width: 350, float: \"right\" }}\r\n                onChange = {(e) => this.setState({ value: e.target.value })}\r\n                value = { this.state.value }\r\n            ></Search>\r\n\r\n\r\n            {/* 修改日报 */}\r\n            <Modal\r\n                visible={this.state.visible}\r\n                onCancel={this.closeAccount}\r\n                footer={null}\r\n                // destroyOnClose={true} width={800}\r\n                footer={null}\r\n            >\r\n                <UpdateMyDate setOne={this.state.setOne} close={this.closeAccount} />\r\n            </Modal>\r\n\r\n            <Table\r\n                rowKey='table'\r\n                rowSelection={rowSelection}\r\n                columns={this.columns}\r\n                dataSource={this.state.list}\r\n                pagination={this.state.pagination}\r\n                onChange={this.onChange}\r\n            // onChange={this.handleTableChange}\r\n            >\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default MyDate;","import React, {Component} from 'react';\r\nclass NoMatch extends Component {\r\n    render() {\r\n        return <span style={{textAlign: 'center'}}>当前没有</span>\r\n    }\r\n}\r\nexport default NoMatch;\r\n","\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Form, Input, Button,Select } from 'antd';\r\nimport { axios } from \"../../../../utils/axios\";\r\nimport { updateMyDate } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\n@connect()\r\nclass UpdateGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userList: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getUserList();\r\n        let value = this.props.setOne;\r\n        // console.log(value);\r\n        this.props.form.setFieldsValue({\r\n            group_name: value.group_name,\r\n            manSelect: value.group_man_name\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                axios.post(\"/updateGroup\", {\r\n                    group_name: values.group_name,\r\n                    group_man_name: this.state.userList.filter(\r\n                        item => item.mobile == values.manSelect\r\n                    )[0].name,\r\n                    group_man_mobile: values.manSelect,\r\n                    _id: this.props.setOne._id\r\n                }).then(({ data }) => {\r\n                this.props.close();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserList = () => {\r\n        axios.post(\"/getOtherInfo\", { mobile: sessionStorage.mobile })\r\n            .then(res => {\r\n                this.setState({\r\n                    userList: res.data.result\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 }\r\n        };\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <FormItem\r\n                    label=\"部门名称\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {getFieldDecorator('group_name', {\r\n                        rules: [{\r\n                            required: true, message: `请输入内容`\r\n                        }],\r\n                    })(\r\n                        <Input style={{ width: 200 }} type=\"text\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    label=\"部门主管\"\r\n                    {...formItemLayout}\r\n                >\r\n                    {\r\n                        getFieldDecorator('manSelect', { rules: [{ required: true, message: '请选择部门负责人' }] })(\r\n                            <Select\r\n                                placeholder={'请选择部门负责人'}\r\n                            >\r\n                                {\r\n                                    this.state.userList.length > 0 ?\r\n                                        this.state.userList.map((item, index) => (\r\n                                            <Select.Option key={index} value={item.mobile}>{item.name}</Select.Option>\r\n                                        )) : null\r\n                                }\r\n                            </Select>\r\n                        )\r\n                    }\r\n                </FormItem>\r\n                <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\"> 提交</Button>\r\n                </FormItem>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nUpdateGroup = Form.create()(UpdateGroup);\r\n\r\nexport default UpdateGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Button, Table, Select, Tag, Modal, Input, Form } from 'antd';\r\nimport UpdateGroup from \"./updateGroup\";\r\nimport { axios } from \"../../../utils/axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { Search } = Input;\r\nconst FormItem = Form.Item;\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n\r\n\r\n@connect()\r\nclass GroupList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            visible: false,\r\n            addvisible: false,\r\n            isLogin: !!sessionStorage.mobile,\r\n            list: [],\r\n            setOne: {},\r\n            value: \"\",\r\n            pagination: {\r\n                total: \"\",\r\n                pageSize: 10,\r\n                current: 1,\r\n                defaultCurrent: 1,\r\n                showTotal: (total) => `总共 ${total} 条`\r\n                // showQuickJumper: true,   \r\n                // showSizeChanger: true,\r\n            },\r\n            userList: []\r\n        };\r\n        this.columns = [\r\n            {\r\n                title: '部门名称',\r\n                dataIndex: 'group_name',\r\n                key: \"types\"\r\n            },\r\n            {\r\n                title: '部门主管',\r\n                dataIndex: 'group_man_name',\r\n                key: \"group_man_name\"\r\n            },\r\n          \r\n            (() => {\r\n                let _json = {\r\n                    title: '操作',\r\n                    dataIndex: 'action',\r\n                    key: 'action',\r\n                    render: (text, record) => {\r\n                        return (\r\n                            <span\r\n                                style={{ cursor: 'pointer', color: '#1890ff' }}\r\n                                onClick={\r\n                                    () => (this.setState({ visible: true, setOne: record }))\r\n                                }\r\n                            >\r\n                                修改\r\n                            </span>\r\n                        )\r\n                    }\r\n                }\r\n                return _json;\r\n            })()\r\n        ];\r\n    }\r\n\r\n    openCreateAccount = (record = {}) => {\r\n        this.setState({\r\n            addvisible: true\r\n            // userMsg: record\r\n        })\r\n    };\r\n\r\n    closeCreateAccount = () => {\r\n        this.setState({\r\n            addvisible: false\r\n        })\r\n    };\r\n\r\n    closeAccount = () => {\r\n        this.setState({\r\n            visible: false\r\n        },\r\n            this.getData()\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.getUserList();\r\n    }\r\n\r\n    getData = () => {\r\n        axios.post(\"/getGroup\")\r\n            .then(res => {\r\n                this.setState({\r\n                    list: res.data.result,\r\n                    total: res.data.result.length - 1,\r\n                })\r\n            });\r\n    }\r\n\r\n    getUserList = () => {\r\n        axios.post(\"/getOtherInfo\", { mobile: sessionStorage.mobile })\r\n            .then(res => {\r\n                this.setState({\r\n                    userList: res.data.result\r\n                })\r\n            })\r\n    }\r\n\r\n    onChange = (page) => {\r\n        this.setState({\r\n            current: page,\r\n        });\r\n    }\r\n\r\n\r\n    handleSearch = (value) => {\r\n        console.log(value);\r\n        this.setState({\r\n            value: value\r\n        })\r\n        this.getData()\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let group_man_name = this.state.userList.filter(\r\n                    item => item.mobile == values.manSelect\r\n                )\r\n                axios.post(\"/addGroup\", {\r\n                    group_name: values.groupName,\r\n                    group_man_name: this.state.userList.filter(\r\n                        item => item.mobile == values.manSelect\r\n                    )[0].name,\r\n                    group_man_mobile: values.manSelect,\r\n                }).then(({ data }) => {\r\n                    if (data.code === 200) {\r\n                        this.closeCreateAccount();\r\n                        this.getData();\r\n                    };\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 }\r\n        };\r\n        return (\r\n            <div>\r\n                {/* 新增部门 */}\r\n                <Button onClick={this.openCreateAccount} type=\"primary\">新增</Button>\r\n                <Modal\r\n                    visible={this.state.addvisible}\r\n                    onCancel={this.closeCreateAccount}\r\n                    footer={null}\r\n                    // destroyOnClose={true} width={800} \r\n                    footer={null}\r\n                >\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormItem\r\n                            label=\"部门名称\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {getFieldDecorator('groupName', {\r\n                                rules: [{\r\n                                    required: true, message: `请输入部门名称`\r\n                                }, {\r\n                                    validator: this.branch\r\n                                }],\r\n                            })(\r\n                                <Input style={{ width: 200 }} type=\"text\" />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem\r\n                            label=\"部门主管\"\r\n                            {...formItemLayout}\r\n                        >\r\n                            {\r\n                                getFieldDecorator('manSelect', { rules: [{ required: true, message: '请选择部门负责人' }] })(\r\n                                    <Select\r\n                                        placeholder={'请选择部门负责人'}\r\n                                    >\r\n                                        {\r\n                                            this.state.userList.length > 0 ?\r\n                                                this.state.userList.map((item, index) => (\r\n                                                    <Select.Option key={index} value={item.mobile}>{item.name}</Select.Option>\r\n                                                )) : null\r\n                                        }\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem wrapperCol={{ span: 12, offset: 6 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\"> 提交</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                {/* <Search\r\n                    placeholder=\"内容或操作人\"\r\n                    onSearch={(value) => this.handleSearch(value)}\r\n                    enterButton\r\n                    style={{ width: 350, float: \"right\" }}\r\n                    onChange={(e) => this.setState({ value: e.target.value })}\r\n                    value={this.state.value}\r\n                ></Search> */}\r\n\r\n\r\n                {/* 修改部门 */}\r\n                <Modal\r\n                    visible={this.state.visible}\r\n                    onCancel={this.closeAccount}\r\n                    footer={null}\r\n                    // destroyOnClose={true} width={800}\r\n                    footer={null}\r\n                >\r\n                    <UpdateGroup setOne={this.state.setOne} close={this.closeAccount} />\r\n                </Modal>\r\n\r\n                <Table\r\n                    rowKey='table'\r\n                    rowSelection={rowSelection}\r\n                    columns={this.columns}\r\n                    dataSource={this.state.list}\r\n                    pagination={this.state.pagination}\r\n                    onChange={this.onChange}\r\n                // onChange={this.handleTableChange}\r\n                >\r\n                </Table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupList = Form.create()(GroupList);\r\n\r\nexport default GroupList;","\r\nimport React, { Component } from \"react\";\r\nimport { Button, Table, Modal, Input } from 'antd';\r\nimport ReactDom from 'react-dom';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/pie';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/chart/bar';\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\nimport { axios } from \"&\";\r\nimport { connect } from \"react-redux\";\r\n@connect()\r\nclass Echarts extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            peopleList: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.myEchartsPie();\r\n    }\r\n\r\n    myEchartsPie = () => {\r\n        const myPie = echarts.init(ReactDom.findDOMNode(this.refs.pie));\r\n        const optionPie = {\r\n            color: ['#2dd4ff', '#db4d4c',],\r\n            textStyle: {\r\n                color: '#000'\r\n            },\r\n            title: {\r\n                text: '男女比例饼状图',\r\n                left: 'center',\r\n                top: 20,\r\n                textStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{b}: {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                // orient: 'vertical',\r\n                left: 'center',\r\n                bottom: 10,\r\n                data: ['Man', 'Women'],\r\n                textStyle: {\r\n                    color: '#eee',\r\n                    fontSize: 14\r\n                },\r\n                itemGap: 50,\r\n                itemHeight: 14,\r\n                itemWidth: 14,\r\n                formatter: '{name}'\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    dataView: {show: true, readOnly: false},\r\n                    restore: {show: true},\r\n                    saveAsImage: {show: true}\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'pie',\r\n                    radius: ['40%', '65%'],\r\n                    center: ['50%', '40%'],\r\n                    labelLine: {\r\n                        show: true,\r\n                        length2: 30,\r\n                        length: 0,\r\n                        // smooth:true\r\n                    },\r\n                    label: {\r\n                        show: true,\r\n                        fontSize: 17\r\n                    },\r\n                    data: [\r\n                        { value: this.state.peopleList.man, name: 'Man' },\r\n                        { value: this.state.peopleList.women, name: 'Women' },\r\n                    ],\r\n                }\r\n            ],\r\n\r\n        };\r\n        myPie.setOption(optionPie)\r\n    }\r\n\r\n    getData = () => {\r\n        axios.post(\"/echarts\")\r\n            .then(res => {\r\n                this.setState({\r\n                    peopleList:{\r\n                        man:res.data.result.man,\r\n                        women:res.data.result.women\r\n                    }\r\n                },() => {\r\n                    this.myEchartsPie();\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ width: 600, height: 600, margin: \"50px auto 0\" }} ref='pie'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Echarts;","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Link } from 'react-router-dom';\r\nimport { Layout, Menu, Breadcrumb, Icon, Dropdown, Badge, Popover, Tag } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport {axios} from \"&\";\r\nimport Info from \"../user/info\";\r\nimport AddressList from \"../user/addresslist\";\r\nimport Subordinate from \"../date/subordinate\";\r\nimport MyDate from \"../date/mydate\";\r\nimport NoMatch from '../noMatch';\r\nimport GroupList from \"../group\";\r\nimport Echarts from \"../echart\";\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst SubMenu = Menu.SubMenu;\r\nconst breadcrumbNameMap = {\r\n    '/home': 'home',\r\n    '/home/info': '个人中心',\r\n    '/home/addressList': '通讯录',\r\n    '/home/mydate': '我的日报',\r\n    '/home/subordinate': '下属日报',\r\n    '/home/group': '部门管理',\r\n    '/home/echarts': 'Echarts'\r\n};\r\nlet menu = (\r\n    <Menu>\r\n        <Menu.Item key=\"out\" onClick={() => {\r\n            sessionStorage.clear();\r\n            window.location.href = window.location.origin;\r\n        }}>退出</Menu.Item>\r\n    </Menu>\r\n);\r\n\r\n@connect()\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            mobile:null\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        axios.post(\"/getMobile\")\r\n        .then(res=>{\r\n            this.setState({\r\n                mobile:res.data.result\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            mobile\r\n        }=this.state\r\n        const { location } = this.props;\r\n        const pathSnippets = location.pathname.split('/').filter(i => i);\r\n        const extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n            const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n            return (\r\n                <Breadcrumb.Item key={url}>\r\n                    <Link to={url}>\r\n                        {breadcrumbNameMap[url]}\r\n                    </Link>\r\n                </Breadcrumb.Item>\r\n            )\r\n        });\r\n        const breadcrumbItems = [(\r\n            <Breadcrumb.Item key=\"home\">\r\n                <Link to=\"/home\" />\r\n            </Breadcrumb.Item>\r\n        )].concat(extraBreadcrumbItems);\r\n        return (\r\n            <div>\r\n                <HashRouter>\r\n                    <Layout style={{ minHeight: '100VH' }}>\r\n                        <Sider width=\"256px\" style={{ boxShadow: '2px 0 6px rgba(0,21,41,.35)', minHeight: '100vh' }}>\r\n                            <div style={{\r\n                                color: '#1890ff',\r\n                                height: '70px',\r\n                                fontSize: '20px',\r\n                                lineHeight: '50px',\r\n                                textAlign: 'center'\r\n                            }}>\r\n                                {/* <img style={{marginBottom: '-20px'}} src={`${this.state.logo}`} alt=\"\"/> */}\r\n                            </div>\r\n                            <Menu theme=\"dark\" defaultSelectedKeys={['info']} defaultOpenKeys={['mine']}\r\n                                mode=\"inline\">\r\n                                <SubMenu\r\n                                    key=\"mine\"\r\n                                    title={<span><Icon type=\"user\" />个人中心</span>}\r\n                                >\r\n                                    <Menu.Item key=\"info\">\r\n                                        <NavLink exact to='/home/info'>\r\n                                            个人资料\r\n                                        </NavLink>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key='addressList'>\r\n                                        <NavLink exact to='/home/addressList'>\r\n                                            通讯录\r\n                                        </NavLink>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key='echarts'>\r\n                                        <NavLink exact to='/home/echarts'>\r\n                                            Echarts\r\n                                        </NavLink>\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu\r\n                                    key=\"workdate\"\r\n                                    title={<span><Icon type=\"schedule\" />工作日报</span>}\r\n                                >\r\n                                    <Menu.Item key=\"mydate\">\r\n                                        <NavLink exact to='/home/mydate'>\r\n                                            我的日报\r\n                                        </NavLink>\r\n                                    </Menu.Item>\r\n                                    {sessionStorage.usertype == 1 ? (<Menu.Item key='subordinate'>\r\n                                        <NavLink exact to='/home/subordinate'>\r\n                                            我的下属日报\r\n                                        </NavLink>\r\n                                    </Menu.Item>) : ''}\r\n                                </SubMenu>\r\n                                <Menu.Item key='group'>\r\n                                    <NavLink exact to='/home/group'>\r\n                                        部门管理\r\n                                        </NavLink>\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Layout>\r\n                            <Header\r\n                                style={{\r\n                                    height: 54,\r\n                                    background: '#fff',\r\n                                    padding: 0,\r\n                                    boxShadow: '0 1px 4px rgba(0,21,41,.08)'\r\n                                }}>\r\n                                <Dropdown overlay={menu}>\r\n                                    <div className=\"ant-dropdown-link\"\r\n                                        style={{\r\n                                            float: 'right',\r\n                                            marginRight: 30,\r\n                                            color: '#40a9ff',\r\n                                            cursor: 'pointer',\r\n                                            fontSize: 16\r\n                                        }}>\r\n                                        {mobile} <Icon type=\"down\" style={{ fontSize: 16 }} />\r\n                                    </div>\r\n                                </Dropdown>\r\n                                <div style={{ height: 54, display: 'inline-block', float: 'right', marginRight: 30 }}>\r\n                                    <Badge offset={[10, -10]} count={2}>\r\n                                        <Icon type=\"bell\"\r\n                                            style={{ cursor: 'pointer', fontSize: 16 }} />\r\n                                    </Badge>\r\n                                </div>\r\n                            </Header>\r\n                            <Content style={{ margin: '0 16px' }}>\r\n                                <Breadcrumb style={{ margin: '4px 0' }}>\r\n                                    {breadcrumbItems}\r\n                                </Breadcrumb>\r\n                                <div\r\n                                    style={{ padding: 24, background: '#fff', minHeight: '600px', position: 'relative' }}>\r\n                                    <Switch>\r\n                                        <Route exact path=\"/home\" component={Info} />\r\n                                        <Route path=\"/home/info\" component={Info} />\r\n                                        <Route path=\"/home/addressList\" component={AddressList} />\r\n                                        <Route path=\"/home/mydate\" component={MyDate} />\r\n                                        <Route path=\"/home/subordinate\" component={Subordinate} />\r\n                                        <Route path=\"/home/group\" component={GroupList} />\r\n                                        <Route path=\"/home/echarts\" component={Echarts} />\r\n                                        <Route component={NoMatch} />\r\n                                    </Switch>\r\n                                </div>\r\n                            </Content>\r\n                            <Footer style={{ textAlign: 'center' }}>\r\n                                版权\r\n                            </Footer>\r\n                        </Layout>\r\n                    </Layout>\r\n\r\n                </HashRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport LazyLoad from \"&/lazyload.js\";\r\nimport Login from \"./login\";\r\nimport SignUp from './signup';\r\nimport Home from \"./home\";\r\n\r\n\r\n//所有的路由在这里配置\r\nexport default class MainLayout extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Switch>\r\n                    {/* <Route exact path={`/`} component={Login} /> */}\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/signup\" component={SignUp} />\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route render={()=><Redirect to=\"/login\"/>} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport immutable from \"immutable\"\r\n\r\nconst defaultState = immutable.fromJS({\r\n    mobile: '',\r\n    token: sessionStorage.token,\r\n    list: [],\r\n    usertype: 2,\r\n})\r\n\r\nexport const user = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"register\":\r\n            let obj = { ...state.toJS(), ...action.payload };\r\n            return immutable.fromJS(obj);\r\n            break;\r\n\r\n        case \"login\":\r\n            let obj1 = { ...state.toJS(), ...action.payload };\r\n            return immutable.fromJS(obj1);\r\n            break;\r\n\r\n        case \"userInfo\":\r\n            let obj2 = { ...state.toJS(), ...action.payload };\r\n            return immutable.fromJS(obj2);\r\n            break;\r\n\r\n        case \"getUserInfo\":\r\n            let obj3 = { ...state.toJS(), ...action.payload };\r\n            return immutable.fromJS(obj3);\r\n            break;\r\n\r\n        case \"addMyDate\":\r\n            let obj4 = { ...state.toJS(), ...action.payload };\r\n            return immutable.fromJS(obj4);\r\n            break;\r\n\r\n        case \"updateMyDate\":\r\n            let obj5 = { ...state.toJS(), ...action.payload };\r\n            return immutable.fromJS(obj5);\r\n            break;\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}","import {combineReducers} from \"redux-immutable\";\r\nimport { user } from \"./user\";\r\n\r\nexport const reducers = combineReducers({\r\n    user:user\r\n});","import {createStore,applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise\";\r\nimport { reducers } from \"./reducers\";\r\n\r\nconst store =createStore(reducers,applyMiddleware(thunk,promise));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport {\r\n    HashRouter,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport MainLayout from \"~/views\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nexport default class MainRoute extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Provider store={store}>\r\n                    <HashRouter\r\n                        basename=\"\"\r\n                    >\r\n                        <Route component={MainLayout}></Route>\r\n                    </HashRouter>\r\n                </Provider>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport MainRoute from \"~\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRoute></MainRoute>\n   </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@/styles/index.scss\"; //引入公共主样式\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}